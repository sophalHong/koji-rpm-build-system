# Variables

# Koji Version
VERSION = ENV['VERSION'].to_s.strip.empty? ? 8 : ENV['VERSION'].to_i
if VERSION == 7
	SERVER_BOX = "prolinux/koji-server-7"
	BUILDER_BOX = "prolinux/koji-builder-7"
else
	SERVER_BOX = "prolinux/koji-server"
	BUILDER_BOX = "prolinux/koji-builder"
end

# Builder node count
BUILDER_COUNT = ENV['BUILDER_COUNT'].to_s.strip.empty? ? 1 : ENV['BUILDER_COUNT'].to_i

# Disk setup
DISK_COUNT = ENV['DISK_COUNT'].to_s.strip.empty? ? 0 : ENV['DISK_COUNT'].to_i
DISK_SIZE_GB = ENV['DISK_SIZE_GB'].to_s.strip.empty? ? 20 : ENV['DISK_SIZE_GB'].to_i

# Resources
SERVER_CPUS = ENV['SERVER_CPUS'].to_s.strip.empty? ? 2 : ENV['SERVER_CPUS'].to_i
SERVER_MEMORY_SIZE_GB = ENV['SERVER_MEMORY_SIZE_GB'].to_s.strip.empty? ? 2 : ENV['SERVER_MEMORY_SIZE_GB'].to_i
BUILDER_CPUS = ENV['BUILDER_CPUS'].to_s.strip.empty? ? 1 : ENV['BUILDER_CPUS'].to_i
BUILDER_MEMORY_SIZE_GB = ENV['BUILDER_MEMORY_SIZE_GB'].to_s.strip.empty? ? 2 : ENV['BUILDER_MEMORY_SIZE_GB'].to_i

# Network
if ENV['PUBLIC_NW_NIC'].to_s.strip.empty?
	$isPrivateNetwork = true
	PUBLIC_NW_NIC = ''
	SERVER_IP = ENV['SERVER_IP'].to_s.strip.empty? ? '192.168.83.10' : ENV['SERVER_IP']
	if BUILDER == 999
		# Isolated Builder
		BUILDER_IP = ENV['BUILDER_IP'].to_s.strip.empty? ? '192.168.83.100' : ENV['BUILDER_IP']
	else
		BUILDER_IP = SERVER_IP[0...SERVER_IP.rindex('.')] + '.' \
			+ (BUILDER + SERVER_IP.split(".").last.to_i).to_s
	end
else
	$isPrivateNetwork = false
	PUBLIC_NW_NIC = ENV['PUBLIC_NW_NIC']
	SERVER_IP = ENV['SERVER_IP'].to_s.strip.empty? ? '' : ENV['SERVER_IP']
	if BUILDER == 999
		# Isolated Builder
		BUILDER_IP = ENV['BUILDER_IP'].to_s.strip.empty? ? '' : ENV['BUILDER_IP']
	else
		BUILDER_IP = SERVER_IP.empty? ? '' : SERVER_IP[0...SERVER_IP.rindex('.')] \
			+ '.' + (BUILDER + SERVER_IP.split(".").last.to_i).to_s
	end
end

NAME = BUILDER == 999 ? ENV['NAME'].to_s.strip.empty? ? 'my-builder' : ENV['NAME'] : "builder-" + BUILDER.to_s

FWD_PORT = ENV['FWD_PORT'].to_s.strip.empty? ? 8080 : ENV['FWD_PORT'].to_i

# Libvirt specific config
LIBVIRT_STORAGE_POOL = ENV['LIBVIRT_STORAGE_POOL'].to_s.strip.empty? ? 'default' : ENV['LIBVIRT_STORAGE_POOL']

# Public NFS server
$isPublicNFS = ENV['NFS_MOUNTPATH'].to_s.strip.empty? ? false : true

CACHE_IP = SERVER_IP.empty? ? \
	File.exist?("./data/server/IP") ? File.read("./data/server/IP").strip : '' \
	: SERVER_IP

NFS_MOUNTPATH = ENV['NFS_MOUNTPATH'].to_s.strip.empty? ? CACHE_IP + ":/mnt/koji" : ENV['NFS_MOUNTPATH']

# User Public SSH key
$userSSHPubKey = ENV['USER_SSHPUBKEY'].to_s.strip.empty? ? '' : ENV['USER_SSHPUBKEY']

# User Scripts
$userPostInstallScript = ENV['USER_POST_INSTALL_SCRIPT_PATH'].to_s.strip.empty? ? '' : ENV['USER_POST_INSTALL_SCRIPT_PATH']

# The controller name is different per OS it seems (this is the case for at least Ubuntu right now).
# For more information, see https://github.com/kusnier/vagrant-persistent-storage/issues/33.
$storagecontroller = 'kojiVmSATAController'
if DISK_COUNT.nil? || DISK_COUNT == 0
	$storagecontrollerneedstobecreated = false
else
	$storagecontrollerneedstobecreated = true
end
