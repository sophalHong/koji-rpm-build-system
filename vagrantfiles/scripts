# Scripts

###### Server ######
# Get server Info
$serverGetInfo = <<SCRIPT
echo "Get Server Info..."
dir=/vagrant/server
mkdir -p ${dir}
ip -f inet a show eth1| grep inet| awk '{ print $2}' | cut -d/ -f1 > ${dir}/IP
openssl x509 -noout -subject -in /etc/pki/koji/kojihub.pem \
| awk -F= '{print $NF}'| tr -d ' ' > ${dir}/koji_domain
SCRIPT

# Change PostgreSQL timezone to Asia/Seoul
$serverChangePsqlTimezone = <<SCRIPT
sed -i 's/UTC/Asia\\/Seoul/g' /var/lib/pgsql/data/postgresql.conf
systemctl restart postgresql.service
systemctl status postgresql.service --no-pager
SCRIPT

# Setup Local NFS server
$serverSetupNFS = <<SCRIPT
echo "Setting up NFS server..."
dnf install nfs-utils -y
echo '/mnt/koji *(rw,sync,no_all_squash,no_root_squash,insecure)' >> /etc/exports
echo '/etc/pki/koji *(ro,sync,no_all_squash,no_root_squash,insecure)' >> /etc/exports
exportfs -arv
exportfs -s
systemctl enable nfs-server.service
systemctl restart nfs-server.service
systemctl status nfs-server.service --no-pager
SCRIPT

# Mount Public NFS server
$serverMountNFS = <<SCRIPT
echo "Mounting NFS '$1' ..."
dnf install nfs-utils -y
retries=5
mkdir -p /mnt/koji
for ((i=1; i<=retries; i++)); do
	mount -t nfs $1 /mnt/koji && break
	[[ $retries -eq i ]] && { echo "Failed to mount `$1` after 5 tries"; exit 1; }
    echo "NFS mount failed, trying again (try ${i}/${retries})..."
	sleep 3
done
echo "$1 /mnt/koji nfs defaults 0 0" >> /etc/fstab
cd /mnt/koji
mkdir -v -p {packages,repos,work,scratch}
chown -v apache:apache {packages,repos,work,scratch}
SCRIPT

# Add koji builder
$serverAddBuilder = <<SCRIPT
echo "Add koji builder '$1' ..."
builder=$1
cd /etc/pki/koji
openssl genrsa -out certs/${builder}.key 2048 &> /dev/null
cat ssl.cnf | sed 's/YOUR_KOJI_HOSTNAME/'${builder}'/'> ssl2.cnf
openssl req -config ssl2.cnf -new -nodes -out certs/${builder}.csr -key certs/${builder}.key -subj "/C=KO/ST=Gyeonggi/O=TmaxA&C/CN=${builder}"
openssl ca -batch -config ssl2.cnf -keyfile private/koji_ca_cert.key -cert koji_ca_cert.crt -out certs/${builder}.crt -outdir certs -infiles certs/${builder}.csr
cat certs/${builder}.crt certs/${builder}.key > ${builder}.pem
mv ssl2.cnf config/${builder}-ssl.cnf

mkdir -p /vagrant/${builder}
cp ${builder}.pem /vagrant/${builder}
cp koji_ca_cert.crt /vagrant/server/

runuser -u admin -- koji add-host ${builder} x86_64
runuser -u admin -- koji add-host-to-channel ${builder} createrepo
SCRIPT

###### Builder ######
# Mount NFS server
$builderMountNFS = <<SCRIPT
echo "Mounting NFS server '$1' ..."
dnf install nfs-utils -y
retries=5
mkdir -p /mnt/koji

for ((i=1; i<=retries; i++)); do
	mount -t nfs $1 /mnt/koji && break
	[[ $retries -eq i ]] && { echo "Failed to mount `$1` after 5 tries"; exit 1; }
    echo "NFS mount failed, trying again (try ${i}/${retries})..."
	sleep 3
done
echo "$1 /mnt/koji nfs defaults 0 0" >> /etc/fstab
SCRIPT

# Set kojid configuration
$builderKojidConf = <<SCRIPT
echo "Setting up kojid service..."
BUILDER_NAME=$1
SERVER_IP=`cat /vagrant/server/IP`
DOMAIN=`cat /vagrant/server/koji_domain`
echo "${SERVER_IP} ${DOMAIN}" >> /etc/hosts

mkdir -p /etc/pki/koji
cp -v /vagrant/${BUILDER_NAME}/${BUILDER_NAME}.pem /etc/pki/koji/
cp -v /vagrant/server/koji_ca_cert.crt /etc/pki/koji/

yum install -y koji-builder
mv /etc/kojid/kojid.conf /etc/kojid/kojid.conf.old

cat > /etc/kojid/kojid.conf <<EOF
[kojid]
user=${BUILDER_NAME}
topdir=/mnt/koji
workdir=/tmp/koji
vendor=Tmax A&C Co., Ltd.
distribution=TmaxA&C
packager=Tmax A&C Co., Ltd. <https://technet.tmaxsoft.com/>
mockhost=redhat-linux-gnu
oz_install_timeout=7200
allowed_scms=scm.example.com:/cvs/example git.example.org:/example svn.example.org:/users/*:no
smtphost=mail.tmax.co.kr:587
from_addr=ProLinux Koji Build System <sophal_hong@tmax.co.kr>
admin_emails=sophal_hong@tmax.co.kr
server=http://${DOMAIN}/kojihub
topurl=http://${DOMAIN}/kojifiles
cert = /etc/pki/koji/${BUILDER_NAME}.pem
serverca = /etc/pki/koji/koji_ca_cert.crt
ca = /etc/pki/koji/koji_ca_cert.crt
EOF

systemctl enable kojid.service
systemctl start kojid.service
systemctl status kojid.service --no-pager
SCRIPT
